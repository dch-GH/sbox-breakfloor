@using Sandbox;
@using Sandbox.UI;
@using Breakfloor;

@namespace Breakfloor.UI
@inherits Panel


@code
{
	Label TargetName { get; set; }
	Label TargetHealth { get; set; }

	public override void Tick()
	{
		var ply = (Breakfloor.Player)Game.LocalPawn;
		if (ply == null) return;

		var tr = Trace.Ray(ply.AimRay.Position, ply.AimRay.Position + ply.AimRay.Forward * 1500f)
		.Ignore(ply)
		.UseHitboxes()
		.Run();

		if (tr.Hit && tr.Entity is Breakfloor.Player target)
		{
			var isTargetEnemy = target.Team != ply.Team;
			var teamText = isTargetEnemy ? "ENEMY:" : "FRIEND:";
			TargetName.Text = $"{teamText} {target.Client.Name}";
			TargetHealth.Text = $"HEALTH: {target.Health.FloorToInt()}%";

			SetClass("active", true);
			SetClass(isTargetEnemy
			? "enemy"
			: "friend", true);
		}
		else
		{
			SetClass("active", false);
			SetClass("friend", false);
			SetClass("enemy", false);
		}

		base.Tick();
	}
}

<root>
	<label @ref="TargetName"></label>
	<label @ref="TargetHealth"></label>
	<style>
		TargetID {
			position: absolute;
			opacity: 0;
			width: 800px;
			height: 70px;
			left: 50%;
			top: 50%;
			margin-top: 14px;
			margin-left: -400px;
			display: flex;
			flex-direction: column;
			text-align: center;
			justify-content: center;
			text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.877);
			transition: opacity 0.2s ease-in-out;

			label {
				font-family: "Poppins";
				font-weight: bold;
				margin-top: -6px;
				padding-right: 2px;
				font-size: 19px;
			}

			targethealth {
				font-size: 14px;
				color: rgba(235, 228, 228, 0.836);
			}

			&.active {
				transition: opacity 0.4s ease-in-out;
				opacity: 0.82;
			}

			&.friend {
				color: rgb(150, 240, 98);
			}

			&.enemy {
				color: rgb(221, 32, 32);
			}
		}
	</style>
</root>